

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 19 16:00:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	strings
   207  006D                     __pstrings:
   208  006D                     stringtab:
   209  006D                     __stringtab:
   210  006D                     stringcode:	
   211                           ;	String table - string pointers are 1 byte each
   212                           
   213  006D                     stringdir:
   214  006D  3000               	movlw	high stringdir
   215  006E  008A               	movwf	10
   216  006F  0804               	movf	4,w
   217  0070  0A84               	incf	4,f
   218  0071  0782               	addwf	2,f
   219  0072                     __stringbase:
   220  0072  3400               	retlw	0
   221  0073                     __end_of__stringtab:
   222  0073                     _data:
   223  0073  340A               	retlw	10
   224  0074                     __end_of_data:
   225  0001                     _TMR0	set	1
   226  000B                     _INTCONbits	set	11
   227  0018                     _RCSTAbits	set	24
   228  0019                     _TXREG	set	25
   229  001A                     _RCREG	set	26
   230  0008                     _PORTD	set	8
   231  000C                     _PIR1bits	set	12
   232  008C                     _PIE1bits	set	140
   233  009A                     _SPBRGH	set	154
   234  0099                     _SPBRG	set	153
   235  0098                     _TXSTAbits	set	152
   236  008F                     _OSCCONbits	set	143
   237  0088                     _TRISD	set	136
   238  0187                     _BAUDCTLbits	set	391
   239  0189                     _ANSELH	set	393
   240  0188                     _ANSEL	set	392
   241                           
   242                           	psect	cinit
   243  000F                     start_initialization:	
   244                           ; #config settings
   245                           
   246  000F                     __initialization:
   247                           
   248                           ; Clear objects allocated to COMMON
   249  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   250  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   251  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   252  0012                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  0012                     __end_of__initialization:
   256  0012  0183               	clrf	3
   257  0013  120A  118A  2840   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0075                     __pbssCOMMON:
   261  0075                     _limite:
   262  0075                     	ds	2
   263  0077                     _cont:
   264  0077                     	ds	1
   265                           
   266                           	psect	cstackCOMMON
   267  0070                     __pcstackCOMMON:
   268  0070                     ?_setup:
   269  0070                     ?_isr:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ??_isr:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280  0070                     	ds	2
   281  0072                     ??_setup:
   282  0072                     ??_main:	
   283                           ; 1 bytes @ 0x2
   284                           
   285                           
   286                           ; 1 bytes @ 0x2
   287  0072                     	ds	3
   288                           
   289                           	psect	maintext
   290  0040                     __pmaintext:	
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 64 in file "LAB10.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, pclath, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : B00/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          3       0       0       0       0
   313 ;;      Totals:         3       0       0       0       0
   314 ;;Total ram usage:        3 bytes
   315 ;; Hardware stack levels required when called: 2
   316 ;; This function calls:
   317 ;;		_setup
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           
   324                           ;psect for function _main
   325  0040                     _main:
   326  0040                     l693:	
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   329                           
   330                           
   331                           ;LAB10.c: 65:     setup();
   332  0040  120A  118A  2016  120A  118A  	fcall	_setup
   333  0045                     l695:
   334                           
   335                           ;LAB10.c: 67:         _delay((unsigned long)((500)*(8000000/4000.0)));
   336  0045  3006               	movlw	6
   337  0046  00F4               	movwf	??_main+2
   338  0047  3013               	movlw	19
   339  0048  00F3               	movwf	??_main+1
   340  0049  30AD               	movlw	173
   341  004A  00F2               	movwf	??_main
   342  004B                     u37:
   343  004B  0BF2               	decfsz	??_main,f
   344  004C  284B               	goto	u37
   345  004D  0BF3               	decfsz	??_main+1,f
   346  004E  284B               	goto	u37
   347  004F  0BF4               	decfsz	??_main+2,f
   348  0050  284B               	goto	u37
   349  0051  2852               	nop2
   350  0052                     l697:
   351                           
   352                           ;LAB10.c: 69:         if(PIR1bits.TXIF){
   353  0052  1283               	bcf	3,5	;RP0=0, select bank0
   354  0053  1303               	bcf	3,6	;RP1=0, select bank0
   355  0054  1E0C               	btfss	12,4	;volatile
   356  0055  2857               	goto	u21
   357  0056  2858               	goto	u20
   358  0057                     u21:
   359  0057  2845               	goto	l695
   360  0058                     u20:
   361  0058                     l699:
   362                           
   363                           ;LAB10.c: 70:             TXREG = data;
   364  0058  300A               	movlw	10
   365  0059  0099               	movwf	25	;volatile
   366  005A  2845               	goto	l695
   367  005B  120A  118A  280C   	ljmp	start
   368  005E                     __end_of_main:
   369                           
   370                           	psect	text1
   371  0016                     __ptext1:	
   372 ;; *************** function _setup *****************
   373 ;; Defined at:
   374 ;;		line 76 in file "LAB10.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _setup
   404  0016                     _setup:
   405  0016                     l655:	
   406                           ;incstack = 0
   407                           ; Regs used in _setup: [wreg+status,2+status,0]
   408                           
   409                           
   410                           ;LAB10.c: 79:     ANSEL = 0;
   411  0016  1683               	bsf	3,5	;RP0=1, select bank3
   412  0017  1703               	bsf	3,6	;RP1=1, select bank3
   413  0018  0188               	clrf	8	;volatile
   414                           
   415                           ;LAB10.c: 80:     ANSELH = 0;
   416  0019  0189               	clrf	9	;volatile
   417                           
   418                           ;LAB10.c: 82:     TRISD = 0;
   419  001A  1683               	bsf	3,5	;RP0=1, select bank1
   420  001B  1303               	bcf	3,6	;RP1=0, select bank1
   421  001C  0188               	clrf	8	;volatile
   422                           
   423                           ;LAB10.c: 84:     PORTD = 0;
   424  001D  1283               	bcf	3,5	;RP0=0, select bank0
   425  001E  1303               	bcf	3,6	;RP1=0, select bank0
   426  001F  0188               	clrf	8	;volatile
   427  0020                     l657:
   428                           
   429                           ;LAB10.c: 87:     OSCCONbits.IRCF = 0b111;
   430  0020  3070               	movlw	112
   431  0021  1683               	bsf	3,5	;RP0=1, select bank1
   432  0022  1303               	bcf	3,6	;RP1=0, select bank1
   433  0023  048F               	iorwf	15,f	;volatile
   434  0024                     l659:
   435                           
   436                           ;LAB10.c: 88:     OSCCONbits.SCS = 1;
   437  0024  140F               	bsf	15,0	;volatile
   438  0025                     l661:
   439                           
   440                           ;LAB10.c: 91:     TXSTAbits.SYNC = 0;
   441  0025  1218               	bcf	24,4	;volatile
   442  0026                     l663:
   443                           
   444                           ;LAB10.c: 92:     TXSTAbits.BRGH = 0;
   445  0026  1118               	bcf	24,2	;volatile
   446  0027                     l665:
   447                           
   448                           ;LAB10.c: 94:     BAUDCTLbits.BRG16 = 1;
   449  0027  1683               	bsf	3,5	;RP0=1, select bank3
   450  0028  1703               	bsf	3,6	;RP1=1, select bank3
   451  0029  1587               	bsf	7,3	;volatile
   452  002A                     l667:
   453                           
   454                           ;LAB10.c: 96:     SPBRG = 25;
   455  002A  3019               	movlw	25
   456  002B  1683               	bsf	3,5	;RP0=1, select bank1
   457  002C  1303               	bcf	3,6	;RP1=0, select bank1
   458  002D  0099               	movwf	25	;volatile
   459  002E                     l669:
   460                           
   461                           ;LAB10.c: 97:     SPBRGH = 0;
   462  002E  019A               	clrf	26	;volatile
   463  002F                     l671:
   464                           
   465                           ;LAB10.c: 99:     RCSTAbits.SPEN = 1;
   466  002F  1283               	bcf	3,5	;RP0=0, select bank0
   467  0030  1303               	bcf	3,6	;RP1=0, select bank0
   468  0031  1798               	bsf	24,7	;volatile
   469  0032                     l673:
   470                           
   471                           ;LAB10.c: 100:     RCSTAbits.RX9 = 0;
   472  0032  1318               	bcf	24,6	;volatile
   473  0033                     l675:
   474                           
   475                           ;LAB10.c: 101:     RCSTAbits.CREN = 1;
   476  0033  1618               	bsf	24,4	;volatile
   477  0034                     l677:
   478                           
   479                           ;LAB10.c: 103:     TXSTAbits.TXEN = 1;
   480  0034  1683               	bsf	3,5	;RP0=1, select bank1
   481  0035  1303               	bcf	3,6	;RP1=0, select bank1
   482  0036  1698               	bsf	24,5	;volatile
   483  0037                     l679:
   484                           
   485                           ;LAB10.c: 106:     PIR1bits.RCIF = 0;
   486  0037  1283               	bcf	3,5	;RP0=0, select bank0
   487  0038  1303               	bcf	3,6	;RP1=0, select bank0
   488  0039  128C               	bcf	12,5	;volatile
   489  003A                     l681:
   490                           
   491                           ;LAB10.c: 107:     PIE1bits.RCIE = 1;
   492  003A  1683               	bsf	3,5	;RP0=1, select bank1
   493  003B  1303               	bcf	3,6	;RP1=0, select bank1
   494  003C  168C               	bsf	12,5	;volatile
   495  003D                     l683:
   496                           
   497                           ;LAB10.c: 108:     INTCONbits.GIE = 1;
   498  003D  178B               	bsf	11,7	;volatile
   499  003E                     l685:
   500                           
   501                           ;LAB10.c: 109:     INTCONbits.PEIE = 1;
   502  003E  170B               	bsf	11,6	;volatile
   503  003F                     l60:
   504  003F  0008               	return
   505  0040                     __end_of_setup:
   506                           
   507                           	psect	text2
   508  005E                     __ptext2:	
   509 ;; *************** function _isr *****************
   510 ;; Defined at:
   511 ;;		line 56 in file "LAB10.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          2       0       0       0       0
   528 ;;      Totals:         2       0       0       0       0
   529 ;;Total ram usage:        2 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		Interrupt level 1
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _isr
   540  005E                     _isr:
   541  005E                     i1l689:
   542                           
   543                           ;LAB10.c: 57:     if(PIR1bits.RCIF){
   544  005E  1283               	bcf	3,5	;RP0=0, select bank0
   545  005F  1303               	bcf	3,6	;RP1=0, select bank0
   546  0060  1E8C               	btfss	12,5	;volatile
   547  0061  2863               	goto	u1_21
   548  0062  2864               	goto	u1_20
   549  0063                     u1_21:
   550  0063  2866               	goto	i1l48
   551  0064                     u1_20:
   552  0064                     i1l691:
   553                           
   554                           ;LAB10.c: 58:         PORTD = RCREG;
   555  0064  081A               	movf	26,w	;volatile
   556  0065  0088               	movwf	8	;volatile
   557  0066                     i1l48:
   558  0066  0871               	movf	??_isr+1,w
   559  0067  008A               	movwf	10
   560  0068  0E70               	swapf	??_isr,w
   561  0069  0083               	movwf	3
   562  006A  0EFE               	swapf	btemp,f
   563  006B  0E7E               	swapf	btemp,w
   564  006C  0009               	retfie
   565  006D                     __end_of_isr:
   566  007E                     btemp	set	126	;btemp
   567  007E                     wtemp0	set	126
   568                           
   569                           	psect	intentry
   570  0004                     __pintentry:	
   571                           ;incstack = 0
   572                           ; Regs used in _isr: [wreg]
   573                           
   574  0004                     interrupt_function:
   575  007E                     saved_w	set	btemp
   576  0004  00FE               	movwf	btemp
   577  0005  0E03               	swapf	3,w
   578  0006  00F0               	movwf	??_isr
   579  0007  080A               	movf	10,w
   580  0008  00F1               	movwf	??_isr+1
   581  0009  120A  118A  285E   	ljmp	_isr
   582                           
   583                           	psect	config
   584                           
   585                           ;Config register CONFIG1 @ 0x2007
   586                           ;	Oscillator Selection bits
   587                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   588                           ;	Watchdog Timer Enable bit
   589                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   590                           ;	Power-up Timer Enable bit
   591                           ;	PWRTE = OFF, PWRT disabled
   592                           ;	RE3/MCLR pin function select bit
   593                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   594                           ;	Code Protection bit
   595                           ;	CP = OFF, Program memory code protection is disabled
   596                           ;	Data Code Protection bit
   597                           ;	CPD = OFF, Data memory code protection is disabled
   598                           ;	Brown Out Reset Selection bits
   599                           ;	BOREN = OFF, BOR disabled
   600                           ;	Internal External Switchover bit
   601                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   602                           ;	Fail-Safe Clock Monitor Enabled bit
   603                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   604                           ;	Low Voltage Programming Enable bit
   605                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   606                           ;	In-Circuit Debugger Mode bit
   607                           ;	DEBUG = 0x1, unprogrammed default
   608  2007                     	org	8199
   609  2007  20D4               	dw	8404
   610                           
   611                           ;Config register CONFIG2 @ 0x2008
   612                           ;	Brown-out Reset Selection bit
   613                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   614                           ;	Flash Program Memory Self Write Enable bits
   615                           ;	WRT = OFF, Write protection off
   616  2008                     	org	8200
   617  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 19 16:00:10 2021

                      pc 0002                       l60 003F                       u20 0058  
                     u21 0057                       u37 004B                       fsr 0004  
                    l661 0025                      l671 002F                      l663 0026  
                    l655 0016                      l681 003A                      l673 0032  
                    l665 0027                      l657 0020                      l683 003D  
                    l675 0033                      l667 002A                      l659 0024  
                    l685 003E                      l677 0034                      l669 002E  
                    l693 0040                      l679 0037                      l695 0045  
                    l697 0052                      l699 0058                      _isr 005E  
                   ?_isr 0070                     i1l48 0066                     _TMR0 0001  
                   u1_20 0064                     u1_21 0063                     _data 0073  
                   _cont 0077                     _main 0040                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l691 0064                    i1l689 005E  
                  _RCREG 001A                    _SPBRG 0099                    _PORTD 0008  
                  _TRISD 0088                    _TXREG 0019                    _setup 0016  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_data 0074             __end_of_main 005E  
                 ??_main 0072                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _limite 0075                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 0040  
                ??_setup 0072               __pmaintext 0040               __pintentry 0004  
             __stringtab 006D                  __ptext1 0016                  __ptext2 005E  
           __size_of_isr 000F     end_of_initialization 0012                _RCSTAbits 0018  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 006D              __pbssCOMMON 0075                ___latbits 0002  
              __pstrings 006D           __size_of_setup 002A        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 0072  
     __end_of__stringtab 0073            __size_of_main 001E               _INTCONbits 000B  
               intlevel1 0000                stringcode 006D               _OSCCONbits 008F  
               stringdir 006D                 stringtab 006D  
