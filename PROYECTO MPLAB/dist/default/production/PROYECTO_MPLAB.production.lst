

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 19 17:49:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	strings
   208  0086                     __pstrings:
   209  0086                     stringtab:
   210  0086                     __stringtab:
   211  0086                     stringcode:	
   212                           ;	String table - string pointers are 1 byte each
   213                           
   214  0086                     stringdir:
   215  0086  3000               	movlw	high stringdir
   216  0087  008A               	movwf	10
   217  0088  0804               	movf	4,w
   218  0089  0A84               	incf	4,f
   219  008A  0782               	addwf	2,f
   220  008B                     __stringbase:
   221  008B  3400               	retlw	0
   222  008C                     __end_of__stringtab:
   223  008C                     _data:
   224  008C  3442               	retlw	66
   225  008D  3469               	retlw	105
   226  008E  3465               	retlw	101
   227  008F  346E               	retlw	110
   228  0090  3476               	retlw	118
   229  0091  3465               	retlw	101
   230  0092  346E               	retlw	110
   231  0093  3469               	retlw	105
   232  0094  3464               	retlw	100
   233  0095  346F               	retlw	111
   234  0096  3420               	retlw	32
   235  0097  343A               	retlw	58
   236  0098  3429               	retlw	41
   237  0099  3400               	retlw	0
   238  009A                     __end_of_data:
   239  0019                     _TXREG	set	25
   240  000B                     _INTCONbits	set	11
   241  0018                     _RCSTAbits	set	24
   242  0008                     _PORTD	set	8
   243  001A                     _RCREG	set	26
   244  0006                     _PORTB	set	6
   245  000C                     _PIR1bits	set	12
   246  008C                     _PIE1bits	set	140
   247  009A                     _SPBRGH	set	154
   248  0099                     _SPBRG	set	153
   249  0098                     _TXSTAbits	set	152
   250  008F                     _OSCCONbits	set	143
   251  0086                     _TRISB	set	134
   252  0088                     _TRISD	set	136
   253  0187                     _BAUDCTLbits	set	391
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  000F                     start_initialization:	
   259                           ; #config settings
   260                           
   261  000F                     __initialization:
   262                           
   263                           ; Clear objects allocated to COMMON
   264  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   265  0010                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268  0010                     __end_of__initialization:
   269  0010  0183               	clrf	3
   270  0011  120A  118A  2870   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMMON
   273  0076                     __pbssCOMMON:
   274  0076                     _i:
   275  0076                     	ds	1
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_setup:
   280  0070                     ?_env_term:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_isr:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292                           
   293                           ; 1 bytes @ 0x0
   294  0070                     	ds	2
   295  0072                     ??_setup:
   296  0072                     ??_env_term:	
   297                           ; 1 bytes @ 0x2
   298                           
   299                           
   300                           ; 1 bytes @ 0x2
   301  0072                     	ds	2
   302  0074                     ??_main:
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	2
   306                           
   307                           	psect	maintext
   308  0070                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 57 in file "LAB10.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   328 ;;      Params:         0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0
   330 ;;      Temps:          2       0       0       0       0
   331 ;;      Totals:         2       0       0       0       0
   332 ;;Total ram usage:        2 bytes
   333 ;; Hardware stack levels required when called: 3
   334 ;; This function calls:
   335 ;;		_env_term
   336 ;;		_setup
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _main
   344  0070                     _main:
   345  0070                     l742:	
   346                           ;incstack = 0
   347                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   348                           
   349                           
   350                           ;LAB10.c: 58:     setup();
   351  0070  120A  118A  2014  120A  118A  	fcall	_setup
   352  0075                     l744:
   353                           
   354                           ;LAB10.c: 60:         _delay((unsigned long)((500)*(1000000/4000.0)));
   355  0075  30A3               	movlw	163
   356  0076  00F5               	movwf	??_main+1
   357  0077  3055               	movlw	85
   358  0078  00F4               	movwf	??_main
   359  0079                     u87:
   360  0079  0BF4               	decfsz	??_main,f
   361  007A  2879               	goto	u87
   362  007B  0BF5               	decfsz	??_main+1,f
   363  007C  2879               	goto	u87
   364  007D                     l746:
   365                           
   366                           ;LAB10.c: 61:         env_term();
   367  007D  120A  118A  2042  120A  118A  	fcall	_env_term
   368  0082  2875               	goto	l744
   369  0083  120A  118A  280C   	ljmp	start
   370  0086                     __end_of_main:
   371                           
   372                           	psect	text1
   373  0014                     __ptext1:	
   374 ;; *************** function _setup *****************
   375 ;; Defined at:
   376 ;;		line 66 in file "LAB10.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels used: 1
   396 ;; Hardware stack levels required when called: 1
   397 ;; This function calls:
   398 ;;		Nothing
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _setup
   406  0014                     _setup:
   407  0014                     l662:	
   408                           ;incstack = 0
   409                           ; Regs used in _setup: [wreg+status,2+status,0]
   410                           
   411                           
   412                           ;LAB10.c: 69:     ANSEL = 0;
   413  0014  1683               	bsf	3,5	;RP0=1, select bank3
   414  0015  1703               	bsf	3,6	;RP1=1, select bank3
   415  0016  0188               	clrf	8	;volatile
   416                           
   417                           ;LAB10.c: 70:     ANSELH = 0;
   418  0017  0189               	clrf	9	;volatile
   419                           
   420                           ;LAB10.c: 72:     TRISD = 0;
   421  0018  1683               	bsf	3,5	;RP0=1, select bank1
   422  0019  1303               	bcf	3,6	;RP1=0, select bank1
   423  001A  0188               	clrf	8	;volatile
   424                           
   425                           ;LAB10.c: 73:     TRISB = 0;
   426  001B  0186               	clrf	6	;volatile
   427                           
   428                           ;LAB10.c: 75:     PORTD = 0;
   429  001C  1283               	bcf	3,5	;RP0=0, select bank0
   430  001D  1303               	bcf	3,6	;RP1=0, select bank0
   431  001E  0188               	clrf	8	;volatile
   432                           
   433                           ;LAB10.c: 76:     PORTB = 0;
   434  001F  0186               	clrf	6	;volatile
   435  0020                     l664:
   436                           
   437                           ;LAB10.c: 79:     OSCCONbits.IRCF = 0b100;
   438  0020  1683               	bsf	3,5	;RP0=1, select bank1
   439  0021  1303               	bcf	3,6	;RP1=0, select bank1
   440  0022  080F               	movf	15,w	;volatile
   441  0023  398F               	andlw	-113
   442  0024  3840               	iorlw	64
   443  0025  008F               	movwf	15	;volatile
   444  0026                     l666:
   445                           
   446                           ;LAB10.c: 80:     OSCCONbits.SCS = 1;
   447  0026  140F               	bsf	15,0	;volatile
   448  0027                     l668:
   449                           
   450                           ;LAB10.c: 83:     TXSTAbits.SYNC = 0;
   451  0027  1218               	bcf	24,4	;volatile
   452  0028                     l670:
   453                           
   454                           ;LAB10.c: 84:     TXSTAbits.BRGH = 1;
   455  0028  1518               	bsf	24,2	;volatile
   456  0029                     l672:
   457                           
   458                           ;LAB10.c: 86:     BAUDCTLbits.BRG16 = 1;
   459  0029  1683               	bsf	3,5	;RP0=1, select bank3
   460  002A  1703               	bsf	3,6	;RP1=1, select bank3
   461  002B  1587               	bsf	7,3	;volatile
   462  002C                     l674:
   463                           
   464                           ;LAB10.c: 88:     SPBRG = 25;
   465  002C  3019               	movlw	25
   466  002D  1683               	bsf	3,5	;RP0=1, select bank1
   467  002E  1303               	bcf	3,6	;RP1=0, select bank1
   468  002F  0099               	movwf	25	;volatile
   469  0030                     l676:
   470                           
   471                           ;LAB10.c: 89:     SPBRGH = 0;
   472  0030  019A               	clrf	26	;volatile
   473  0031                     l678:
   474                           
   475                           ;LAB10.c: 91:     RCSTAbits.SPEN = 1;
   476  0031  1283               	bcf	3,5	;RP0=0, select bank0
   477  0032  1303               	bcf	3,6	;RP1=0, select bank0
   478  0033  1798               	bsf	24,7	;volatile
   479  0034                     l680:
   480                           
   481                           ;LAB10.c: 92:     RCSTAbits.RX9 = 0;
   482  0034  1318               	bcf	24,6	;volatile
   483  0035                     l682:
   484                           
   485                           ;LAB10.c: 93:     RCSTAbits.CREN = 1;
   486  0035  1618               	bsf	24,4	;volatile
   487  0036                     l684:
   488                           
   489                           ;LAB10.c: 95:     TXSTAbits.TXEN = 1;
   490  0036  1683               	bsf	3,5	;RP0=1, select bank1
   491  0037  1303               	bcf	3,6	;RP1=0, select bank1
   492  0038  1698               	bsf	24,5	;volatile
   493  0039                     l686:
   494                           
   495                           ;LAB10.c: 98:     PIR1bits.RCIF = 0;
   496  0039  1283               	bcf	3,5	;RP0=0, select bank0
   497  003A  1303               	bcf	3,6	;RP1=0, select bank0
   498  003B  128C               	bcf	12,5	;volatile
   499  003C                     l688:
   500                           
   501                           ;LAB10.c: 99:     PIE1bits.RCIE = 1;
   502  003C  1683               	bsf	3,5	;RP0=1, select bank1
   503  003D  1303               	bcf	3,6	;RP1=0, select bank1
   504  003E  168C               	bsf	12,5	;volatile
   505  003F                     l690:
   506                           
   507                           ;LAB10.c: 100:     INTCONbits.GIE = 1;
   508  003F  178B               	bsf	11,7	;volatile
   509  0040                     l692:
   510                           
   511                           ;LAB10.c: 101:     INTCONbits.PEIE = 1;
   512  0040  170B               	bsf	11,6	;volatile
   513  0041                     l61:
   514  0041  0008               	return
   515  0042                     __end_of_setup:
   516                           
   517                           	psect	text2
   518  0042                     __ptext2:	
   519 ;; *************** function _env_term *****************
   520 ;; Defined at:
   521 ;;		line 106 in file "LAB10.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          2       0       0       0       0
   538 ;;      Totals:         2       0       0       0       0
   539 ;;Total ram usage:        2 bytes
   540 ;; Hardware stack levels used: 2
   541 ;; Hardware stack levels required when called: 1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _env_term
   551  0042                     _env_term:
   552  0042                     l724:	
   553                           ;incstack = 0
   554                           ; Regs used in _env_term: [wreg-fsr0h+status,2+status,0+pclath]
   555                           
   556                           
   557                           ;LAB10.c: 107:     while (i < 14){
   558  0042  2869               	goto	l740
   559  0043                     l65:
   560                           
   561                           ;LAB10.c: 108:         if (PIR1bits.TXIF){
   562  0043  1283               	bcf	3,5	;RP0=0, select bank0
   563  0044  1303               	bcf	3,6	;RP1=0, select bank0
   564  0045  1E0C               	btfss	12,4	;volatile
   565  0046  2848               	goto	u51
   566  0047  2849               	goto	u50
   567  0048                     u51:
   568  0048  2869               	goto	l740
   569  0049                     u50:
   570  0049                     l726:
   571                           
   572                           ;LAB10.c: 109:             for(i = 0; i<14; i++){
   573  0049  01F6               	clrf	_i
   574  004A                     l732:
   575                           
   576                           ;LAB10.c: 110:                 _delay((unsigned long)((100)*(1000000/4000.0)));
   577  004A  3021               	movlw	33
   578  004B  00F3               	movwf	??_env_term+1
   579  004C  3076               	movlw	118
   580  004D  00F2               	movwf	??_env_term
   581  004E                     u97:
   582  004E  0BF2               	decfsz	??_env_term,f
   583  004F  284E               	goto	u97
   584  0050  0BF3               	decfsz	??_env_term+1,f
   585  0051  284E               	goto	u97
   586  0052  0000               	nop
   587  0053                     l734:
   588                           
   589                           ;LAB10.c: 111:                 TXREG = data[i];
   590  0053  0876               	movf	_i,w
   591  0054  3E01               	addlw	low ((_data-__stringbase)| (0+32768))
   592  0055  0084               	movwf	4
   593  0056  120A  118A  2086  120A  118A  	fcall	stringdir
   594  005B  1283               	bcf	3,5	;RP0=0, select bank0
   595  005C  1303               	bcf	3,6	;RP1=0, select bank0
   596  005D  0099               	movwf	25	;volatile
   597  005E                     l736:
   598                           
   599                           ;LAB10.c: 112:             }
   600  005E  3001               	movlw	1
   601  005F  00F2               	movwf	??_env_term
   602  0060  0872               	movf	??_env_term,w
   603  0061  07F6               	addwf	_i,f
   604  0062                     l738:
   605  0062  300E               	movlw	14
   606  0063  0276               	subwf	_i,w
   607  0064  1C03               	skipc
   608  0065  2867               	goto	u61
   609  0066  2868               	goto	u60
   610  0067                     u61:
   611  0067  284A               	goto	l732
   612  0068                     u60:
   613  0068  2842               	goto	l724
   614  0069                     l740:
   615                           
   616                           ;LAB10.c: 107:     while (i < 14){
   617  0069  300E               	movlw	14
   618  006A  0276               	subwf	_i,w
   619  006B  1C03               	skipc
   620  006C  286E               	goto	u71
   621  006D  286F               	goto	u70
   622  006E                     u71:
   623  006E  2843               	goto	l65
   624  006F                     u70:
   625  006F                     l70:
   626  006F  0008               	return
   627  0070                     __end_of_env_term:
   628                           
   629                           	psect	text3
   630  009A                     __ptext3:	
   631 ;; *************** function _isr *****************
   632 ;; Defined at:
   633 ;;		line 49 in file "LAB10.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          2       0       0       0       0
   650 ;;      Totals:         2       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		Interrupt level 1
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _isr
   662  009A                     _isr:
   663  009A                     i1l714:
   664                           
   665                           ;LAB10.c: 50:     if(PIR1bits.RCIF){
   666  009A  1283               	bcf	3,5	;RP0=0, select bank0
   667  009B  1303               	bcf	3,6	;RP1=0, select bank0
   668  009C  1E8C               	btfss	12,5	;volatile
   669  009D  289F               	goto	u4_21
   670  009E  28A0               	goto	u4_20
   671  009F                     u4_21:
   672  009F  28A2               	goto	i1l50
   673  00A0                     u4_20:
   674  00A0                     i1l716:
   675                           
   676                           ;LAB10.c: 51:         PORTB = RCREG;
   677  00A0  081A               	movf	26,w	;volatile
   678  00A1  0086               	movwf	6	;volatile
   679  00A2                     i1l50:
   680  00A2  0871               	movf	??_isr+1,w
   681  00A3  008A               	movwf	10
   682  00A4  0E70               	swapf	??_isr,w
   683  00A5  0083               	movwf	3
   684  00A6  0EFE               	swapf	btemp,f
   685  00A7  0E7E               	swapf	btemp,w
   686  00A8  0009               	retfie
   687  00A9                     __end_of_isr:
   688  007E                     btemp	set	126	;btemp
   689  007E                     wtemp0	set	126
   690                           
   691                           	psect	intentry
   692  0004                     __pintentry:	
   693                           ;incstack = 0
   694                           ; Regs used in _isr: [wreg]
   695                           
   696  0004                     interrupt_function:
   697  007E                     saved_w	set	btemp
   698  0004  00FE               	movwf	btemp
   699  0005  0E03               	swapf	3,w
   700  0006  00F0               	movwf	??_isr
   701  0007  080A               	movf	10,w
   702  0008  00F1               	movwf	??_isr+1
   703  0009  120A  118A  289A   	ljmp	_isr
   704                           
   705                           	psect	config
   706                           
   707                           ;Config register CONFIG1 @ 0x2007
   708                           ;	Oscillator Selection bits
   709                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   710                           ;	Watchdog Timer Enable bit
   711                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   712                           ;	Power-up Timer Enable bit
   713                           ;	PWRTE = OFF, PWRT disabled
   714                           ;	RE3/MCLR pin function select bit
   715                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   716                           ;	Code Protection bit
   717                           ;	CP = OFF, Program memory code protection is disabled
   718                           ;	Data Code Protection bit
   719                           ;	CPD = OFF, Data memory code protection is disabled
   720                           ;	Brown Out Reset Selection bits
   721                           ;	BOREN = OFF, BOR disabled
   722                           ;	Internal External Switchover bit
   723                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   724                           ;	Fail-Safe Clock Monitor Enabled bit
   725                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   726                           ;	Low Voltage Programming Enable bit
   727                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   728                           ;	In-Circuit Debugger Mode bit
   729                           ;	DEBUG = 0x1, unprogrammed default
   730  2007                     	org	8199
   731  2007  20D4               	dw	8404
   732                           
   733                           ;Config register CONFIG2 @ 0x2008
   734                           ;	Brown-out Reset Selection bit
   735                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   736                           ;	Flash Program Memory Self Write Enable bits
   737                           ;	WRT = OFF, Write protection off
   738  2008                     	org	8200
   739  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    14
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_env_term

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                           _env_term
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _env_term                                             2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _env_term
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 19 17:49:37 2021

                      _i 0076                        pc 0002                       l61 0041  
                     l70 006F                       l65 0043                       u50 0049  
                     u51 0048                       u60 0068                       u61 0067  
                     u70 006F                       u71 006E                       u87 0079  
                     u97 004E                       fsr 0004                      l732 004A  
                    l740 0069                      l724 0042                      l734 0053  
                    l726 0049                      l670 0028                      l662 0014  
                    l742 0070                      l736 005E                      l680 0034  
                    l672 0029                      l664 0020                      l744 0075  
                    l738 0062                      l690 003F                      l682 0035  
                    l674 002C                      l666 0026                      l746 007D  
                    l692 0040                      l684 0036                      l676 0030  
                    l668 0027                      l686 0039                      l678 0031  
                    l688 003C                      _isr 009A                      fsr0 0004  
                   ?_isr 0070                     i1l50 00A2                     u4_20 00A0  
                   u4_21 009F                     _data 008C                     _main 0070  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l714 009A  
                  i1l716 00A0                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _setup 0014  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_data 009A             __end_of_main 0086  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A         __end_of_env_term 0070                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_setup 0042  
                ??_setup 0072               __pmaintext 0070               __pintentry 0004  
             __stringtab 0086                ?_env_term 0070                  __ptext1 0014  
                __ptext2 0042                  __ptext3 009A             __size_of_isr 000F  
   end_of_initialization 0010               ??_env_term 0072                _RCSTAbits 0018  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 00A9              __pbssCOMMON 0076                ___latbits 0002  
      __size_of_env_term 002E                __pstrings 0086           __size_of_setup 002E  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 008B       __end_of__stringtab 008C                 _env_term 0042  
          __size_of_main 0016               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0086               _OSCCONbits 008F                 stringdir 0086  
               stringtab 0086  
