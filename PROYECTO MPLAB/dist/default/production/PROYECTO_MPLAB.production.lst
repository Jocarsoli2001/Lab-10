

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 19 17:46:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	strings
   208  0086                     __pstrings:
   209  0086                     stringtab:
   210  0086                     __stringtab:
   211  0086                     stringcode:	
   212                           ;	String table - string pointers are 1 byte each
   213                           
   214  0086                     stringdir:
   215  0086  3000               	movlw	high stringdir
   216  0087  008A               	movwf	10
   217  0088  0804               	movf	4,w
   218  0089  0A84               	incf	4,f
   219  008A  0782               	addwf	2,f
   220  008B                     __stringbase:
   221  008B  3400               	retlw	0
   222  008C                     __end_of__stringtab:
   223  008C                     _data:
   224  008C  3442               	retlw	66
   225  008D  3469               	retlw	105
   226  008E  3465               	retlw	101
   227  008F  346E               	retlw	110
   228  0090  3476               	retlw	118
   229  0091  3465               	retlw	101
   230  0092  346E               	retlw	110
   231  0093  3469               	retlw	105
   232  0094  3464               	retlw	100
   233  0095  346F               	retlw	111
   234  0096  3420               	retlw	32
   235  0097  343A               	retlw	58
   236  0098  3429               	retlw	41
   237  0099                     __end_of_data:
   238  0019                     _TXREG	set	25
   239  000B                     _INTCONbits	set	11
   240  0018                     _RCSTAbits	set	24
   241  0008                     _PORTD	set	8
   242  001A                     _RCREG	set	26
   243  0006                     _PORTB	set	6
   244  000C                     _PIR1bits	set	12
   245  008C                     _PIE1bits	set	140
   246  009A                     _SPBRGH	set	154
   247  0099                     _SPBRG	set	153
   248  0098                     _TXSTAbits	set	152
   249  008F                     _OSCCONbits	set	143
   250  0086                     _TRISB	set	134
   251  0088                     _TRISD	set	136
   252  0187                     _BAUDCTLbits	set	391
   253  0189                     _ANSELH	set	393
   254  0188                     _ANSEL	set	392
   255                           
   256                           	psect	cinit
   257  000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260  000F                     __initialization:
   261                           
   262                           ; Clear objects allocated to COMMON
   263  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   264  0010                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  0010                     __end_of__initialization:
   268  0010  0183               	clrf	3
   269  0011  120A  118A  2870   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMMON
   272  0076                     __pbssCOMMON:
   273  0076                     _i:
   274  0076                     	ds	1
   275                           
   276                           	psect	cstackCOMMON
   277  0070                     __pcstackCOMMON:
   278  0070                     ?_setup:
   279  0070                     ?_env_term:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_isr:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ??_isr:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_main:	
   289                           ; 1 bytes @ 0x0
   290                           
   291                           
   292                           ; 1 bytes @ 0x0
   293  0070                     	ds	2
   294  0072                     ??_setup:
   295  0072                     ??_env_term:	
   296                           ; 1 bytes @ 0x2
   297                           
   298                           
   299                           ; 1 bytes @ 0x2
   300  0072                     	ds	2
   301  0074                     ??_main:
   302                           
   303                           ; 1 bytes @ 0x4
   304  0074                     	ds	2
   305                           
   306                           	psect	maintext
   307  0070                     __pmaintext:	
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 57 in file "LAB10.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : B00/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0
   329 ;;      Temps:          2       0       0       0       0
   330 ;;      Totals:         2       0       0       0       0
   331 ;;Total ram usage:        2 bytes
   332 ;; Hardware stack levels required when called: 3
   333 ;; This function calls:
   334 ;;		_env_term
   335 ;;		_setup
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           
   342                           ;psect for function _main
   343  0070                     _main:
   344  0070                     l742:	
   345                           ;incstack = 0
   346                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   347                           
   348                           
   349                           ;LAB10.c: 58:     setup();
   350  0070  120A  118A  2014  120A  118A  	fcall	_setup
   351  0075                     l744:
   352                           
   353                           ;LAB10.c: 60:         _delay((unsigned long)((500)*(1000000/4000.0)));
   354  0075  30A3               	movlw	163
   355  0076  00F5               	movwf	??_main+1
   356  0077  3055               	movlw	85
   357  0078  00F4               	movwf	??_main
   358  0079                     u87:
   359  0079  0BF4               	decfsz	??_main,f
   360  007A  2879               	goto	u87
   361  007B  0BF5               	decfsz	??_main+1,f
   362  007C  2879               	goto	u87
   363  007D                     l746:
   364                           
   365                           ;LAB10.c: 61:         env_term();
   366  007D  120A  118A  2042  120A  118A  	fcall	_env_term
   367  0082  2875               	goto	l744
   368  0083  120A  118A  280C   	ljmp	start
   369  0086                     __end_of_main:
   370                           
   371                           	psect	text1
   372  0014                     __ptext1:	
   373 ;; *************** function _setup *****************
   374 ;; Defined at:
   375 ;;		line 66 in file "LAB10.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; Hardware stack levels required when called: 1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _setup
   405  0014                     _setup:
   406  0014                     l662:	
   407                           ;incstack = 0
   408                           ; Regs used in _setup: [wreg+status,2+status,0]
   409                           
   410                           
   411                           ;LAB10.c: 69:     ANSEL = 0;
   412  0014  1683               	bsf	3,5	;RP0=1, select bank3
   413  0015  1703               	bsf	3,6	;RP1=1, select bank3
   414  0016  0188               	clrf	8	;volatile
   415                           
   416                           ;LAB10.c: 70:     ANSELH = 0;
   417  0017  0189               	clrf	9	;volatile
   418                           
   419                           ;LAB10.c: 72:     TRISD = 0;
   420  0018  1683               	bsf	3,5	;RP0=1, select bank1
   421  0019  1303               	bcf	3,6	;RP1=0, select bank1
   422  001A  0188               	clrf	8	;volatile
   423                           
   424                           ;LAB10.c: 73:     TRISB = 0;
   425  001B  0186               	clrf	6	;volatile
   426                           
   427                           ;LAB10.c: 75:     PORTD = 0;
   428  001C  1283               	bcf	3,5	;RP0=0, select bank0
   429  001D  1303               	bcf	3,6	;RP1=0, select bank0
   430  001E  0188               	clrf	8	;volatile
   431                           
   432                           ;LAB10.c: 76:     PORTB = 0;
   433  001F  0186               	clrf	6	;volatile
   434  0020                     l664:
   435                           
   436                           ;LAB10.c: 79:     OSCCONbits.IRCF = 0b100;
   437  0020  1683               	bsf	3,5	;RP0=1, select bank1
   438  0021  1303               	bcf	3,6	;RP1=0, select bank1
   439  0022  080F               	movf	15,w	;volatile
   440  0023  398F               	andlw	-113
   441  0024  3840               	iorlw	64
   442  0025  008F               	movwf	15	;volatile
   443  0026                     l666:
   444                           
   445                           ;LAB10.c: 80:     OSCCONbits.SCS = 1;
   446  0026  140F               	bsf	15,0	;volatile
   447  0027                     l668:
   448                           
   449                           ;LAB10.c: 83:     TXSTAbits.SYNC = 0;
   450  0027  1218               	bcf	24,4	;volatile
   451  0028                     l670:
   452                           
   453                           ;LAB10.c: 84:     TXSTAbits.BRGH = 1;
   454  0028  1518               	bsf	24,2	;volatile
   455  0029                     l672:
   456                           
   457                           ;LAB10.c: 86:     BAUDCTLbits.BRG16 = 1;
   458  0029  1683               	bsf	3,5	;RP0=1, select bank3
   459  002A  1703               	bsf	3,6	;RP1=1, select bank3
   460  002B  1587               	bsf	7,3	;volatile
   461  002C                     l674:
   462                           
   463                           ;LAB10.c: 88:     SPBRG = 25;
   464  002C  3019               	movlw	25
   465  002D  1683               	bsf	3,5	;RP0=1, select bank1
   466  002E  1303               	bcf	3,6	;RP1=0, select bank1
   467  002F  0099               	movwf	25	;volatile
   468  0030                     l676:
   469                           
   470                           ;LAB10.c: 89:     SPBRGH = 0;
   471  0030  019A               	clrf	26	;volatile
   472  0031                     l678:
   473                           
   474                           ;LAB10.c: 91:     RCSTAbits.SPEN = 1;
   475  0031  1283               	bcf	3,5	;RP0=0, select bank0
   476  0032  1303               	bcf	3,6	;RP1=0, select bank0
   477  0033  1798               	bsf	24,7	;volatile
   478  0034                     l680:
   479                           
   480                           ;LAB10.c: 92:     RCSTAbits.RX9 = 0;
   481  0034  1318               	bcf	24,6	;volatile
   482  0035                     l682:
   483                           
   484                           ;LAB10.c: 93:     RCSTAbits.CREN = 1;
   485  0035  1618               	bsf	24,4	;volatile
   486  0036                     l684:
   487                           
   488                           ;LAB10.c: 95:     TXSTAbits.TXEN = 1;
   489  0036  1683               	bsf	3,5	;RP0=1, select bank1
   490  0037  1303               	bcf	3,6	;RP1=0, select bank1
   491  0038  1698               	bsf	24,5	;volatile
   492  0039                     l686:
   493                           
   494                           ;LAB10.c: 98:     PIR1bits.RCIF = 0;
   495  0039  1283               	bcf	3,5	;RP0=0, select bank0
   496  003A  1303               	bcf	3,6	;RP1=0, select bank0
   497  003B  128C               	bcf	12,5	;volatile
   498  003C                     l688:
   499                           
   500                           ;LAB10.c: 99:     PIE1bits.RCIE = 1;
   501  003C  1683               	bsf	3,5	;RP0=1, select bank1
   502  003D  1303               	bcf	3,6	;RP1=0, select bank1
   503  003E  168C               	bsf	12,5	;volatile
   504  003F                     l690:
   505                           
   506                           ;LAB10.c: 100:     INTCONbits.GIE = 1;
   507  003F  178B               	bsf	11,7	;volatile
   508  0040                     l692:
   509                           
   510                           ;LAB10.c: 101:     INTCONbits.PEIE = 1;
   511  0040  170B               	bsf	11,6	;volatile
   512  0041                     l61:
   513  0041  0008               	return
   514  0042                     __end_of_setup:
   515                           
   516                           	psect	text2
   517  0042                     __ptext2:	
   518 ;; *************** function _env_term *****************
   519 ;; Defined at:
   520 ;;		line 106 in file "LAB10.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          2       0       0       0       0
   537 ;;      Totals:         2       0       0       0       0
   538 ;;Total ram usage:        2 bytes
   539 ;; Hardware stack levels used: 2
   540 ;; Hardware stack levels required when called: 1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _env_term
   550  0042                     _env_term:
   551  0042                     l724:	
   552                           ;incstack = 0
   553                           ; Regs used in _env_term: [wreg-fsr0h+status,2+status,0+pclath]
   554                           
   555                           
   556                           ;LAB10.c: 107:     while (i < 14){
   557  0042  2869               	goto	l740
   558  0043                     l65:
   559                           
   560                           ;LAB10.c: 108:         if (PIR1bits.TXIF){
   561  0043  1283               	bcf	3,5	;RP0=0, select bank0
   562  0044  1303               	bcf	3,6	;RP1=0, select bank0
   563  0045  1E0C               	btfss	12,4	;volatile
   564  0046  2848               	goto	u51
   565  0047  2849               	goto	u50
   566  0048                     u51:
   567  0048  2869               	goto	l740
   568  0049                     u50:
   569  0049                     l726:
   570                           
   571                           ;LAB10.c: 109:             for(i = 0; i<14; i++){
   572  0049  01F6               	clrf	_i
   573  004A                     l732:
   574                           
   575                           ;LAB10.c: 110:                 _delay((unsigned long)((100)*(1000000/4000.0)));
   576  004A  3021               	movlw	33
   577  004B  00F3               	movwf	??_env_term+1
   578  004C  3076               	movlw	118
   579  004D  00F2               	movwf	??_env_term
   580  004E                     u97:
   581  004E  0BF2               	decfsz	??_env_term,f
   582  004F  284E               	goto	u97
   583  0050  0BF3               	decfsz	??_env_term+1,f
   584  0051  284E               	goto	u97
   585  0052  0000               	nop
   586  0053                     l734:
   587                           
   588                           ;LAB10.c: 111:                 TXREG = data[i];
   589  0053  0876               	movf	_i,w
   590  0054  3E01               	addlw	low ((_data-__stringbase)| (0+32768))
   591  0055  0084               	movwf	4
   592  0056  120A  118A  2086  120A  118A  	fcall	stringdir
   593  005B  1283               	bcf	3,5	;RP0=0, select bank0
   594  005C  1303               	bcf	3,6	;RP1=0, select bank0
   595  005D  0099               	movwf	25	;volatile
   596  005E                     l736:
   597                           
   598                           ;LAB10.c: 112:             }
   599  005E  3001               	movlw	1
   600  005F  00F2               	movwf	??_env_term
   601  0060  0872               	movf	??_env_term,w
   602  0061  07F6               	addwf	_i,f
   603  0062                     l738:
   604  0062  300E               	movlw	14
   605  0063  0276               	subwf	_i,w
   606  0064  1C03               	skipc
   607  0065  2867               	goto	u61
   608  0066  2868               	goto	u60
   609  0067                     u61:
   610  0067  284A               	goto	l732
   611  0068                     u60:
   612  0068  2842               	goto	l724
   613  0069                     l740:
   614                           
   615                           ;LAB10.c: 107:     while (i < 14){
   616  0069  300E               	movlw	14
   617  006A  0276               	subwf	_i,w
   618  006B  1C03               	skipc
   619  006C  286E               	goto	u71
   620  006D  286F               	goto	u70
   621  006E                     u71:
   622  006E  2843               	goto	l65
   623  006F                     u70:
   624  006F                     l70:
   625  006F  0008               	return
   626  0070                     __end_of_env_term:
   627                           
   628                           	psect	text3
   629  0099                     __ptext3:	
   630 ;; *************** function _isr *****************
   631 ;; Defined at:
   632 ;;		line 49 in file "LAB10.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0
   648 ;;      Temps:          2       0       0       0       0
   649 ;;      Totals:         2       0       0       0       0
   650 ;;Total ram usage:        2 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		Interrupt level 1
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _isr
   661  0099                     _isr:
   662  0099                     i1l714:
   663                           
   664                           ;LAB10.c: 50:     if(PIR1bits.RCIF){
   665  0099  1283               	bcf	3,5	;RP0=0, select bank0
   666  009A  1303               	bcf	3,6	;RP1=0, select bank0
   667  009B  1E8C               	btfss	12,5	;volatile
   668  009C  289E               	goto	u4_21
   669  009D  289F               	goto	u4_20
   670  009E                     u4_21:
   671  009E  28A1               	goto	i1l50
   672  009F                     u4_20:
   673  009F                     i1l716:
   674                           
   675                           ;LAB10.c: 51:         PORTB = RCREG;
   676  009F  081A               	movf	26,w	;volatile
   677  00A0  0086               	movwf	6	;volatile
   678  00A1                     i1l50:
   679  00A1  0871               	movf	??_isr+1,w
   680  00A2  008A               	movwf	10
   681  00A3  0E70               	swapf	??_isr,w
   682  00A4  0083               	movwf	3
   683  00A5  0EFE               	swapf	btemp,f
   684  00A6  0E7E               	swapf	btemp,w
   685  00A7  0009               	retfie
   686  00A8                     __end_of_isr:
   687  007E                     btemp	set	126	;btemp
   688  007E                     wtemp0	set	126
   689                           
   690                           	psect	intentry
   691  0004                     __pintentry:	
   692                           ;incstack = 0
   693                           ; Regs used in _isr: [wreg]
   694                           
   695  0004                     interrupt_function:
   696  007E                     saved_w	set	btemp
   697  0004  00FE               	movwf	btemp
   698  0005  0E03               	swapf	3,w
   699  0006  00F0               	movwf	??_isr
   700  0007  080A               	movf	10,w
   701  0008  00F1               	movwf	??_isr+1
   702  0009  120A  118A  2899   	ljmp	_isr
   703                           
   704                           	psect	config
   705                           
   706                           ;Config register CONFIG1 @ 0x2007
   707                           ;	Oscillator Selection bits
   708                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   709                           ;	Watchdog Timer Enable bit
   710                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   711                           ;	Power-up Timer Enable bit
   712                           ;	PWRTE = OFF, PWRT disabled
   713                           ;	RE3/MCLR pin function select bit
   714                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   715                           ;	Code Protection bit
   716                           ;	CP = OFF, Program memory code protection is disabled
   717                           ;	Data Code Protection bit
   718                           ;	CPD = OFF, Data memory code protection is disabled
   719                           ;	Brown Out Reset Selection bits
   720                           ;	BOREN = OFF, BOR disabled
   721                           ;	Internal External Switchover bit
   722                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   723                           ;	Fail-Safe Clock Monitor Enabled bit
   724                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   725                           ;	Low Voltage Programming Enable bit
   726                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   727                           ;	In-Circuit Debugger Mode bit
   728                           ;	DEBUG = 0x1, unprogrammed default
   729  2007                     	org	8199
   730  2007  20D4               	dw	8404
   731                           
   732                           ;Config register CONFIG2 @ 0x2008
   733                           ;	Brown-out Reset Selection bit
   734                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   735                           ;	Flash Program Memory Self Write Enable bits
   736                           ;	WRT = OFF, Write protection off
   737  2008                     	org	8200
   738  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_env_term

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                           _env_term
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _env_term                                             2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _env_term
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 19 17:46:55 2021

                      _i 0076                        pc 0002                       l61 0041  
                     l70 006F                       l65 0043                       u50 0049  
                     u51 0048                       u60 0068                       u61 0067  
                     u70 006F                       u71 006E                       u87 0079  
                     u97 004E                       fsr 0004                      l732 004A  
                    l740 0069                      l724 0042                      l734 0053  
                    l726 0049                      l670 0028                      l662 0014  
                    l742 0070                      l736 005E                      l680 0034  
                    l672 0029                      l664 0020                      l744 0075  
                    l738 0062                      l690 003F                      l682 0035  
                    l674 002C                      l666 0026                      l746 007D  
                    l692 0040                      l684 0036                      l676 0030  
                    l668 0027                      l686 0039                      l678 0031  
                    l688 003C                      _isr 0099                      fsr0 0004  
                   ?_isr 0070                     i1l50 00A1                     u4_20 009F  
                   u4_21 009E                     _data 008C                     _main 0070  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l714 0099  
                  i1l716 009F                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _setup 0014  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_data 0099             __end_of_main 0086  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A         __end_of_env_term 0070                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_setup 0042  
                ??_setup 0072               __pmaintext 0070               __pintentry 0004  
             __stringtab 0086                ?_env_term 0070                  __ptext1 0014  
                __ptext2 0042                  __ptext3 0099             __size_of_isr 000F  
   end_of_initialization 0010               ??_env_term 0072                _RCSTAbits 0018  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 00A8              __pbssCOMMON 0076                ___latbits 0002  
      __size_of_env_term 002E                __pstrings 0086           __size_of_setup 002E  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 008B       __end_of__stringtab 008C                 _env_term 0042  
          __size_of_main 0016               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0086               _OSCCONbits 008F                 stringdir 0086  
               stringtab 0086  
